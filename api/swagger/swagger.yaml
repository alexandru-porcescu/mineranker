swagger: "2.0"
info:
  version: "0.0.1"
  title: Hello World App
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /api/v1
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /story:
    x-swagger-router-controller: story
    get:
      description: Gets the latest stories
      operationId: getStories
      parameters:
        - name: limit
          in: query
          description: the amount of stories to fetch (max 300)
          required: false
          type: integer
        - name: offset
          in: query
          description: the id of the last story retrieved
          required: false
          type: string
        - name: miners
          in: query
          description: a list of registered miner ids to get data from
          required: true
          type: array
          items:
            type: string
          collectionFormat: csv
        - name: rankers
          in: query
          description: a list of registered ranker ids to rank miner data
          required: true
          type: array
          items:
            type: string
          collectionFormat: csv
        - name: pagination
          description: a base64 encoded JSON objecet mapping miners to their last returned story's id. The pagination string given in the response of this request.
          in: query
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            type: array
            # a pointer to a definition
            items:
              $ref: "#/definitions/Story"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /rankers:
    x-swagger-router-controller: rankers
    get:
      description: Get registered rankers
      operationId: getRankers
      parameters:
        - name: q
          in: query
          description: name or part of the name of ranker to fetch
          required: false
          type: string
      responses:
        "200": 
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Ranker"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Register a new ranker
      operationId: registerNewRanker
      parameters:
        - name: newRanker
          in: body
          description: the new ranker
          required: true
          schema:
            $ref: "#/definitions/Ranker"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /rankers/{ranker_id}:
    x-swagger-router-controller: rankers
    get:
      description: Get a single ranker by its id
      operationId: getRankerById
      parameters:
        - name: ranker_id
          in: path
          description: the id of the ranker to fetch
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Ranker"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /miners:
    x-swagger-router-controller: miners
    get:
      description: Gets miners
      operationId: getMiners
      parameters:
        - name: q
          in: query
          description: name or part of the name of miner to fetch
          required: false
          type: string
      responses:
        "200": 
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Miner"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Registers a new miner
      operationId: registerNewMiners
      parameters:
        - name: newMiner
          in: body
          description: the new miner
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/Miner"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /miners/{miner_id}:
    x-swagger-router-controller: miners
    get:
      description: Get a single miner by its id
      operationId: getMinerById
      parameters:
        - name: miner_id
          required: true
          in: path
          type: string
          description: the id of the miner to fetch
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Miner"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    patch:
      description: To update description of a miner
      operationId: modifyMinerDescription
      parameters:
        - name: miner_id
          required: true
          in: path
          type: string
          description: the id of the miner whose description is to be updated
        - name: patchedMiner
          in: body
          description: the miner to be patched
          required: true
          schema:
            type: object
            properties:
              description:
                type: string
            required:
              - description
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Miner"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /miners/{miner_id}/story:
    x-swagger-router-controller: miners
    post:
      description: Miners use this route to insert new enriched stories into the system
      operationId: insertNewStories
      parameters:
        - name: miner_id
          in: path
          description: the id of the miner this story belongs to
          required: true
          type: string
        - name: newStory
          in: body
          description: The name of the person to whom to say hello
          required: true
          schema: 
            type: array
            items:
              $ref: "#/definitions/InsertStory"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /miners/{miner_id}/story/{story_id}:
    x-swagger-router-controller: miners
    patch:
      description: To upvote or downvote a story
      operationId: voteOnStory
      parameters:
        - name: miner_id
          in: path
          description: the id of the miner this story belongs to
          required: true
          type: string
        - name: story_id
          in: path
          description: the id of the story to upvote or downvote on
          required: true
          type: string
        - name: upvote
          in: query
          description: upvote a story, if it is false then downvote a story
          required: true
          type: boolean
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Story"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  SuccessResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
  InsertStory:
    required:
      - title
      - url
      - extra
    properties:
      title:
        type: string
      url:
        type: string
      og_image_url:
        type: string
      description:
        type: string
      extra:
        type: object
  Story:
    type: object
    allOf:
      - $ref: "#/definitions/InsertStory"
      - type: object
        required:
          - _id
          - upvote
          - downvote
        properties:
          _id: 
            type: string
          upvote:
            type: integer
          downvote:
            type: integer
  Miner:
    type: object
    required:
      - name
      - description
    properties:
      _id: 
        type: string
      name: 
        type: string
      description: 
        type: string
  Ranker:
    type: object
    required:
      - name
      - filter
      - sort
    properties:
      _id:
        type: string
      name:
        type: string
      filter:
        type: object
      sort:
       type: object